#Lisa just got a new math workbook. A workbook contains exercise problems, grouped into chapters.
#Lisa believes a problem to be special if its index (within a chapter) is the same as the page number where it's located.
#The format of Lisa's book is as follows:
#There are n chapters in Lisa's workbook, numbered from 1 to n.
#The ith chapter has arr[i] problems, numbered from 1 to arr[i].
#Each page can hold up to k problems. Only a chapter's last page of exercises may contain fewer than k problems.
#Each new chapter starts on a new page, so a page will never contain problems from more than one chapter.
#The page number indexing starts at 1.
#include <assert.h>
#include <limits.h>
#include <math.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int workbook(int n, int k,  int* arr) {
    int special_num=0, i,j,pages=0;
    for(i = 0 ; i < n ; i++){
        pages++;
        for( j = 1 ; j <= arr[i] ; j++){
            if(j==pages){
                special_num++;
            }
            if(j % k == 0 && j != arr[i]){
                pages++;
            }
        }
    }
    return special_num;
    }

int main()
{
    int  n , k , arr_count = 100 ,i, special_num;
    int arr[arr_count];
    scanf("%d %d", &n ,&k);
    for(  i = 0; i < n ; i++){
        scanf("%d",&arr[i]);
    }
    special_num =  workbook(n,k,arr);
    printf("%d",special_num);
    return 0;
}
